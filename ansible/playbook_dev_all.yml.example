---
- name: Build development system
  hosts: all
  become: true

  vars_files:
    - vars/settings_dev.yml

  pre_tasks:

    - name: 'Replace sources.list'
      copy:
        dest: '/etc/apt/sources.list'
        backup: true
        src: 'files/ubuntu-14.04_sohu_sources.list'
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'trusty'
      tags: system

    - name: 'Update apt cache (Debian)'
      apt: update_cache=yes
      when: ansible_os_family == 'Debian'
      tags: system

    - name: 'Upgrade all packages (Debian)'
      apt: upgrade=dist
      when: ansible_os_family == 'Debian'
      tags: system

    - name: 'Upgrade all packages (RedHat)'
      yum: name=* state=latest
      when: ansible_os_family == 'RedHat'
      tags: system

    - name: 'Create web_host user'
      user:
        name: "{{ web_host.user }}"
      tags: [system, user]

    - name: 'Create bastion_host user'
      user:
        name: "{{ bastion_host.user }}"
        shell: /bin/false
      tags: [system, user]

    - name: 'Create remote_host user'
      user:
        name: "{{ remote_host.user }}"
      tags: [system, user]

    - name: 'Create /opt/mailhog'
      file:
        path: '/opt/mailhog'
        state: 'directory'

    - name: 'Copy MailHog bin to /opt/mailhog'
      copy:
        src: '/vagrant/MailHog_linux_amd64'
        dest: '/opt/mailhog/mailhog'
        remote_src: true

  roles:
    - role: geerlingguy.ntp
      tags: ntp
      ntp_timezone: "{{ time_zone }}"
      ntp_servers:
        - cn.pool.ntp.org iburst

    - role: geerlingguy.git
      tags: git

    - role: geerlingguy.mysql
      tags: mysql
      mysql_packages:
        - mariadb-client
        - mariadb-server
        - python-mysqldb
        - libmysqlclient-dev
      mysql_bind_address: '0.0.0.0'
      mysql_databases:
        - name: "{{ web_db.database }}"
      mysql_users:
        - name: "{{ web_db.username }}"
          host: "%"
          password: "{{ web_db.password }}"
          priv: "{{ web_db.database }}.*:ALL"
      when: ansible_os_family == 'Debian' and web_db.adapter == 'mysql2'

    - role: DavidWittman.redis
      tags: redis
      redis_port: "{{ web_redis.port }}"
      redis_bind: "{{ web_redis.host }}"

    - role: vkill.ruby
      tags: ruby
      ruby_install_from_source: True
      ruby_version: 2.2.2
      ruby_download_url: http://cache.ruby-lang.org/pub/ruby/ruby-2.2.2.tar.gz
      ruby_install_bundler: False

    - role: geerlingguy.nodejs
      tags: nodejs
      nodejs_forever: False

    - role: willshersystems.sshd
      tags: sshd

    - role: geerlingguy.mailhog
      tags: mailhog
      mailhog_binary_url: https://github.com/mailhog/MailHog/releases/download/v0.2.0/MailHog_linux_amd64
      ssmtp_mailhub: "0.0.0.0:{{ web_smtp.port }}"

    - role: graylog2.graylog
      tags: graylog
      graylog_web_listen_address: '0.0.0.0'
      graylog_web_port: 9000
      graylog_rest_listen_uri: http://0.0.0.0:12900/
      graylog_rest_transport_uri: "http://{{ web_url.host }}:12900/"

    - role: nickhammond.logrotate
      tags: logrotate
      logrotate_scripts:
        - name: ssh_bastion_website
          path: "/website/log/*.log"
          options:
            - daily
            - missingok
            - rotate 14
            - compress
            - delaycompress
            - notifempty
            - copytruncate

    - role: vkill.gpg_key
      tags: gpg_key
      gpg_key_import_enable: false
      gpg_key_user: "{{ bastion_host.user }}"
      gpg_key_gen_fetch_dest_basedir: "backup/bastion_host/gpg_key"
      gpg_key_gen_fetch_files:
        - public_asc
        - uid
        - public_id

    - role: vkill.gpg_key
      tags: gpg_key
      gpg_key_import_enable: false
      gpg_key_user: "{{ web_host.user }}"
      gpg_key_gen_fetch_dest_basedir: "backup/web_host/gpg_key"
      gpg_key_gen_fetch_files:
        - public_asc
        - uid
        - public_id

    - role: vkill.gpg_key
      tags: gpg_key
      gpg_key_user: "{{ bastion_host.user }}"
      gpg_key_gen_enable: false
      gpg_key_import_enable: true
      gpg_key_import_public_key_file: "backup/web_host/gpg_key/public_asc"

    - role: vkill.gpg_key
      tags: gpg_key
      gpg_key_user: "{{ web_host.user }}"
      gpg_key_gen_enable: false
      gpg_key_import_enable: true
      gpg_key_import_public_key_file: "backup/bastion_host/gpg_key/public_asc"

    - role: vkill.ssh_key
      tags: ssh_key
      ssh_key_user: "{{ bastion_host.user }}"
      ssh_key_gen_fetch_enable: true
      ssh_key_gen_fetch_dest_basedir: "backup/bastion_host/ssh_key"

  tasks:
    - name: "Append bastion_host's user ssh public key to remote_host's user ssh authorized_key"
      authorized_key:
        user: "{{ remote_host.user }}"
        key: "{{ lookup('file', 'backup/bastion_host/ssh_key/id_rsa.pub') }}"
      tags: ssh_key

    - name: 'Replace gem source for {{ web_host.user }}'
      shell: gem sources --add https://gems.ruby-china.org/ --remove https://rubygems.org/
      become: yes
      become_user: "{{ web_host.user }}"
      tags: ruby

    - name: 'Replace gem source for root'
      shell: gem sources --add https://gems.ruby-china.org/ --remove https://rubygems.org/
      become: yes
      become_user: "root"
      tags: ruby

    - name: Install Bundler.
      gem: name=bundler state=present user_install=no
      tags: ruby

    - name: 'Replace bundle source for {{ web_host.user }}'
      shell: bundle config mirror.https://rubygems.org https://gems.ruby-china.org
      become: yes
      become_user: "{{ web_host.user }}"
      tags: ruby

    - name: 'Replace npm registry for {{ web_host.user }}'
      shell: npm config set registry https://registry.npm.taobao.org
      become: yes
      become_user: "{{ web_host.user }}"
      tags: nodejs

  post_tasks:
    - name: "Generate webiste settings vagrant_development.local.yml"
      template:
        src: "website_settings_local.yml.j2"
        dest: "/website/config/settings/vagrant_development.local.yml"
      tags: web_host

    - name: "Set ENV for webiste vagrant flag"
      lineinfile:
        dest:   "/etc/environment"
        regexp: "^VAGRANT="
        line:   "VAGRANT=1"
      tags: web_host

