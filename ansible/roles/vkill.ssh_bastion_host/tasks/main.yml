---

# Include OS-specific installation tasks.
- include: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Create groups
  group:
    name: "{{ item.group | default(item.name) }}"
    state: present
  with_items: "{{ssh_bastion_host_users}}"

- name: Create users
  user:
    name: "{{ item.name }}"
    state: present
    group: "{{ item.group | default(item.name) }}"
    groups: "{{ item.groups | default('') }}"
    append: yes
    createhome: yes
    shell: /bin/false
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_type: "{{ ssh_key_type }}"
    ssh_key_comment: "{{ inventory_hostname }}-{{ item.name }}@ssh_bastion"
    ssh_key_file: "{{ ssh_key_path }}/{{ ssh_key_private_file }}"
  with_items: "{{ ssh_bastion_host_users }}"

- name: Get ssh public keys stat
  stat:
    path: "~/{{ ssh_key_path }}/{{ ssh_key_public_file }}"
  register: stat_ssh_key_public_files
  become: yes
  become_user: "{{ item.name }}"
  with_items: "{{ ssh_bastion_host_users }}"

- name: Ensure the ssh public keys exists
  fail:
    msg: >
      The ssh public key ({{ item.stat.path if item.stat.exists == True else '' }}) should exists and can read it
  when: item.stat.exists == False or item.stat.rusr is not defined or item.stat.rusr == False or item.stat.size == 0
  with_items: "{{ stat_ssh_key_public_files.results }}"
